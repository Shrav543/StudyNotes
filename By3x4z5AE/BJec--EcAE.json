{"_id":"BJec--EcAE","title":"Set","dateCreated":1560064257814,"lastAccessed":"2019-06-09T07:10:57.818Z","lastUpdated":"2020-04-21T15:51:04.140Z","notebookId":"By3x4z5AE","body":{"blocks":[{"key":"ag6qs","text":"Set","type":"header-one","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ahnl4","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a10de","text":"Outputs only unique values. takes only single argument.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"b2bl8","text":"sets do not follow order.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5j5m3","text":"The major difference is that sets, unlike lists or tuples, cannot have multiple occurrences of the same element and store unordered values.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fi7i7","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"56chr","text":"Because sets cannot have multiple occurrences of the same element, it makes sets highly useful to efficiently remove duplicate values from a list or tuple and to perform common math operations like unions and intersections.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9avd0","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bif1","text":"https://www.datacamp.com/community/tutorials/sets-in-python","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":59,"key":0}],"data":{}},{"key":"ds9gi","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ftsgr","text":"","type":"divider","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"qrga","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9oi0l","text":"myset = set()","type":"custom-code-block-python","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"aov39","text":"myset","type":"custom-code-block-python","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c5kro","text":"    set()","type":"custom-code-block-python","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4ioic","text":"myset.add(1)","type":"custom-code-block-python","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"98mmc","text":"    {1}","type":"custom-code-block-python","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"b1551","text":"myset.add(3)","type":"custom-code-block-python","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"59kd9","text":"    {1,3}","type":"custom-code-block-python","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3errd","text":"mylist = [ 1,2,5,2,6,3,2.8,4,5,6,9]","type":"custom-code-block-python","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"75to5","text":"set_list= set(mylist)","type":"custom-code-block-python","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4q2gv","text":"set_list","type":"custom-code-block-python","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2vgf2","text":"    {1, 2, 2.8, 3, 4, 5, 6, 9}","type":"custom-code-block-python","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fufc2","text":"set_list.add(15)","type":"custom-code-block-python","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6j22m","text":"set_list","type":"custom-code-block-python","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7555j","text":"    {1, 2, 2.8, 3, 4, 5, 6, 9, 15}    ","type":"custom-code-block-python","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":"https://www.datacamp.com/community/tutorials/sets-in-python"}}},"tags":[]}
